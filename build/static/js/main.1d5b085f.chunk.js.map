{"version":3,"sources":["constands/RoomMap.js","component/login/Login.js","component/question/bot.png","component/question/Question.js","component/status/Status.js","App.js","reportWebVitals.js","index.js"],"names":["rooms","id","title","createUUID","s","hexDigits","i","substr","Math","floor","random","join","Login","props","setUser","useState","name","numberPhone","department","valueLogin","setValueLogin","recover","setRecover","onHandleChange","event","value","target","listRoom","map","element","index","className","action","method","onSubmit","preventDefault","onChange","required","type","onClick","getName","fullname","fullnameCut","split","length","Question","user","order","src","bot","alt","Status","editOrder","status","aria-hidden","window","confirm","getFullDate","date","getDate","getMonth","getFullYear","getOrder","orders","result","forEach","parseDate","Date","trim","App","presentUser","setPresentUser","setOrders","useEffect","JSON","parse","localStorage","getItem","onSetUser","setItem","stringify","onOrder","ordersCopy","push","onEditOrder","isOrder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d5b085f.chunk.js","sourcesContent":["export const rooms = [\r\n    {\r\n        id: 1,\r\n        title: 'Phòng Sếp'\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'AHT Asia'\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'G1'\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'AHT Solutions'\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'GO3'\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'GP'\r\n    },\r\n    {\r\n        id: 7,\r\n        title: 'System Admin'\r\n    },\r\n    {\r\n        id: 8,\r\n        title: 'Tester'\r\n    },\r\n    {\r\n        id: 9,\r\n        title: 'Design'\r\n    },\r\n    {\r\n        id: 10,\r\n        title: 'Java'\r\n    },\r\n    {\r\n        id: 11,\r\n        title: 'HR'\r\n    },\r\n    {\r\n        id: 12,\r\n        title: 'Sale'\r\n    },\r\n    {\r\n        id: 13,\r\n        title: 'Traning'\r\n    }\r\n];","// import library\r\nimport './Login.scss';\r\nimport { rooms } from '../../constands/RoomMap';\r\nimport { useState } from 'react';\r\n\r\n// create UUID\r\nfunction createUUID() {\r\n    // http://www.ietf.org/rfc/rfc4122.txt\r\n    var s = [];\r\n    var hexDigits = \"0123456789abcdef\";\r\n    for (var i = 0; i < 36; i++) {\r\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n    }\r\n    s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\r\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n    s[8] = s[13] = s[18] = s[23] = \"-\";\r\n    \r\n    var uuid = s.join(\"\");\r\n    return uuid;\r\n}\r\n\r\n// code function here\r\nfunction Login(props) {\r\n    // get props\r\n    const { setUser } = props;\r\n\r\n    // delcare state\r\n    const [valueLogin, setValueLogin] = useState(\r\n        {\r\n            id: '',\r\n            name: '',\r\n            numberPhone: '',\r\n            department: 1\r\n        }\r\n    )\r\n    const [recover, setRecover] = useState(false);\r\n\r\n    // handle when change value\r\n    const onHandleChange = event => {\r\n        const value = event.target.value;\r\n        const name= event.target.name;\r\n\r\n        setValueLogin({\r\n            ...valueLogin,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    // handle when submit form \r\n    const onHandleSubmit = event => {\r\n        event.preventDefault();\r\n        setUser({\r\n            ...valueLogin,\r\n            id: createUUID()\r\n        })\r\n    }\r\n\r\n    // return ui room\r\n    const listRoom = rooms.map(\r\n        (element, index) => {\r\n            return (\r\n                <option key={index} value={element.id}>{element.title}</option>\r\n            )\r\n        }\r\n    )\r\n\r\n    // return ui login \r\n    const loginUI = () => {\r\n        return (\r\n            <>\r\n                <div className='form-group'>\r\n                    <label>\r\n                        <p>Tên</p>\r\n                        <input \r\n                            className='form-control'\r\n                            name='name'\r\n                            value={valueLogin.name}\r\n                            onChange={onHandleChange}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>\r\n                        <p>Số điện thoại</p>\r\n                        <input \r\n                            className='form-control'\r\n                            name='numberPhone'\r\n                            value={valueLogin.numberPhone}\r\n                            onChange={onHandleChange}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>\r\n                        <p>Phòng</p>\r\n                        <select\r\n                            className='form-control'\r\n                            name='department'\r\n                            value={valueLogin.department}\r\n                            onChange={onHandleChange}\r\n                            required\r\n                        >\r\n                        {\r\n                            listRoom\r\n                        }\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    // return recover login \r\n    const recoverUI = () => {\r\n        return (\r\n            <>\r\n                <div className='form-group'>\r\n                    <label>\r\n                        <p>Số điện thoại</p>\r\n                        <input \r\n                            className='form-control'\r\n                            name='numberPhone'\r\n                            value={valueLogin.numberPhone}\r\n                            onChange={onHandleChange}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    // change UI mode\r\n    const onUIChange = () => {\r\n        setRecover(!recover);\r\n    }\r\n\r\n    // return ui\r\n    return (\r\n        <div className=\"login\">\r\n            <h2>Cho tôi biết bạn là ai được không?</h2>\r\n            <form action=\"\" method=\"\" onSubmit={onHandleSubmit}>\r\n                {\r\n                    recover?\r\n                    recoverUI():\r\n                    loginUI()\r\n                }\r\n                <button type='submit'\r\n                    className='form-submit'\r\n                >Tiếp</button>\r\n            </form>\r\n            <u onClick={onUIChange}>\r\n                {\r\n                    recover?\r\n                    'Chúng mình chưa từng gặp nhau?':\r\n                    'Chúng mình từng gặp nhau?'\r\n                }\r\n            </u>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/bot.5b699b01.png\";","// import library, image\r\nimport './Question.scss';\r\nimport bot from './bot.png';\r\n\r\n// get name from fullname\r\nfunction getName(fullname) {\r\n    let result = '';\r\n    const fullnameCut = fullname.split(' ');\r\n    result = fullnameCut[fullnameCut.length-1];\r\n\r\n    return result;\r\n}\r\n\r\n\r\n// code function here\r\nfunction Question(props) {\r\n    // get props\r\n    const { user, order } = props;\r\n\r\n\r\n    // return ui\r\n    return (\r\n        <div className=\"question\">\r\n            <div className='question__head'>\r\n                <img src={bot} alt='bot' />\r\n                <h2>Xin chào, {getName(user.name)}</h2>\r\n            </div>\r\n            <div className='question__body'>\r\n                <p>Bạn có muốn đặt cơm ngày mai không?</p>\r\n                <div className='question__body__anwser'>\r\n                    <button type='button'\r\n                        className='question__body__anwser__btn question__body__anwser__btn--success'\r\n                        onClick={\r\n                            () => {\r\n                                order(1)\r\n                            }\r\n                        }\r\n                    >\r\n                        Tất nhiên là có rồi!\r\n                    </button>\r\n\r\n                    <button type='button'\r\n                        className='question__body__anwser__btn question__body__anwser__btn--danger'\r\n                        onClick={\r\n                            () => {\r\n                                order(-1)\r\n                            }\r\n                        }\r\n                    >\r\n                        Mai mình đem theo cơm rồi!\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;","// import library, image\r\nimport './Status.scss';\r\n\r\n// code function here\r\nfunction Status(props) {\r\n    // get props\r\n    const { order, editOrder } = props;\r\n\r\n    // handle when change order\r\n    var onOrder = () => {\r\n        let confirm = window.confirm('Bạn xác nhận lại giúp mình nhé?');\r\n        \r\n        if (confirm) {\r\n            editOrder(1);\r\n        }\r\n    }\r\n\r\n    // handle when change order\r\n    var onCancelOrder = () => {\r\n        let confirm = window.confirm('Bạn xác nhận lại giúp mình nhé?');\r\n        \r\n        if (confirm) {\r\n            editOrder(-1);\r\n        }\r\n    }\r\n\r\n    // return ui\r\n    return (\r\n        <div className=\"status\">\r\n            <div className='status__head'>\r\n            {\r\n                order.status === -1 ?\r\n                <i \r\n                    className=\"fa fa-ban status__head__faild\" \r\n                    aria-hidden=\"true\"\r\n                ></i>:\r\n                <i \r\n                    className=\"fa fa-check-circle status__head__done\" \r\n                    aria-hidden=\"true\"\r\n                ></i>   \r\n                \r\n            }\r\n            </div>\r\n            <div className='status__body'>\r\n                <p>\r\n                {\r\n                    order.status === -1 ?\r\n                    'Tiếc quá! Ngày mai bạn không nhận được vé cơm!':\r\n                    'Chúc mừng! Ngày mai bạn sẽ nhận được vé cơm nha!'\r\n                }\r\n                </p>\r\n                <div className='status__body__anwser'>\r\n                    \r\n                    {\r\n                        order.status === -1 ?\r\n                        <u \r\n                            onClick={onOrder}\r\n                        >Bạn có muốn đặt vé?</u>:\r\n                        <u\r\n                            onClick={onCancelOrder}\r\n                        >Bạn có muốn hủy vé?</u>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Status;","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Login from './component/login/Login';\r\nimport Question from './component/question/Question';\r\nimport Status from './component/status/Status';\r\n\r\nfunction getFullDate(date) {\r\n    let result = '';\r\n\r\n    result = '' + date.getDate() + '/' + (date.getMonth()+1) + '/' + date.getFullYear();\r\n\r\n    return result;\r\n}\r\n\r\nfunction isOrder(orders, id) {\r\n    let result = false;\r\n\r\n    orders.forEach(element => {\r\n        let parseDate = new Date(element.date);\r\n\r\n        if (element.id.trim() === id && getFullDate(parseDate) === getFullDate(new Date())) {\r\n            result = true;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nfunction getOrder (orders, id) {\r\n    let result = -1;\r\n\r\n    orders.forEach((element,index) => {\r\n        let parseDate = new Date(element.date);\r\n\r\n        if (element.id.trim() === id && getFullDate(parseDate) === getFullDate(new Date())) {\r\n            result = index;\r\n        }\r\n    });\r\n\r\n    return result;    \r\n}\r\n\r\nfunction App() {\r\n    // declare state \r\n    const [presentUser, setPresentUser] = useState({\r\n        id: '',\r\n        name: '',\r\n        numberPhone: '',\r\n        department: 1\r\n    });\r\n    const [orders, setOrders] = useState([]);\r\n    \r\n    // load user from local Storage\r\n    useEffect(\r\n        () => {\r\n            let user = JSON.parse(localStorage.getItem('user'))?\r\n                JSON.parse(localStorage.getItem('user')):\r\n                {\r\n                    id: '',\r\n                    name: '',\r\n                    numberPhone: '',\r\n                    department: 1\r\n                };\r\n            \r\n            let orders = JSON.parse(localStorage.getItem('orders'))?\r\n                JSON.parse(localStorage.getItem('orders')):\r\n                [];\r\n            setPresentUser({...user});\r\n            setOrders([...orders]);\r\n        },[]\r\n    )\r\n\r\n    \r\n    // handle when complete input user\r\n    const onSetUser = user => {\r\n        setPresentUser({\r\n            ...user\r\n        })\r\n\r\n        localStorage.setItem('user',JSON.stringify(user));\r\n    }\r\n\r\n    // handle when order lunch\r\n    const onOrder = status => {\r\n        let ordersCopy = [...orders];\r\n\r\n        ordersCopy.push({\r\n            id: presentUser.id,\r\n            date: new Date(),\r\n            status: status\r\n        });\r\n        setOrders([...ordersCopy]);\r\n        localStorage.setItem('orders', JSON.stringify(ordersCopy));\r\n    }\r\n\r\n    const onEditOrder = status => {\r\n        let ordersCopy = [...orders];\r\n        let index = getOrder(orders,presentUser.id);\r\n\r\n        if (index !== -1) {\r\n            ordersCopy[index] = {\r\n                ...ordersCopy[index],\r\n                status: status\r\n            }\r\n        }\r\n\r\n        setOrders([...ordersCopy]);\r\n        localStorage.setItem('orders', JSON.stringify(ordersCopy));\r\n    }\r\n\r\n    // return component\r\n    const componentsUI = () => {\r\n        if (presentUser.id.trim() === '') {\r\n            return (\r\n                <Login \r\n                    setUser={onSetUser}\r\n                />\r\n            )\r\n        }\r\n\r\n        if (!isOrder(orders,presentUser.id)) {\r\n            return (\r\n                <Question \r\n                    user={presentUser}\r\n                    order={onOrder}\r\n                />\r\n            )  \r\n        }\r\n        return (\r\n            <Status \r\n                order={orders[getOrder(orders,presentUser.id)]}\r\n                editOrder={onEditOrder}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            componentsUI()\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}