{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\riceTicket\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './component/login/Login';\nimport Question from './component/question/Question';\nimport * as Firebase from './utils/CallFirebase'; // create UUID\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction createUUID() {\n  // http://www.ietf.org/rfc/rfc4122.txt\n  var s = [];\n  var hexDigits = \"0123456789abcdef\";\n\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n  }\n\n  s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\n\n  s[19] = hexDigits.substr(s[19] & 0x3 | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n\n  s[8] = s[13] = s[18] = s[23] = \"-\";\n  var uuid = s.join(\"\");\n  return uuid;\n}\n\nfunction getFullDate(date) {\n  let result = '';\n  result = '' + date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n  return result;\n}\n\nfunction isExistOrder(orders, id) {\n  let result = false;\n  orders.forEach(element => {\n    let parseDate = new Date(element.date);\n\n    if (element.status === 1 && element.idUser === id && getFullDate(parseDate) === getFullDate(new Date())) {\n      result = true;\n    }\n  });\n  return result;\n}\n\nfunction getOrder(orders, id) {\n  let result = -1;\n  orders.forEach((element, index) => {\n    let parseDate = new Date(element.date);\n\n    if (element.idUser === id && getFullDate(parseDate) === getFullDate(new Date())) {\n      result = index;\n    }\n  });\n  return result;\n}\n\nfunction App() {\n  _s();\n\n  // declare state \n  const [presentUser, setPresentUser] = useState({\n    id: '',\n    name: '',\n    numberPhone: '',\n    department: 1\n  });\n  const [orders, setOrders] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [isOrder, setIsOrder] = useState(false); // load user from local Storage\n\n  useEffect(() => {\n    // get all user\n    Firebase.readUsers().then(snapshot => {\n      let result = [];\n\n      if (snapshot.exists()) {\n        snapshot.forEach(element => {\n          result.push({\n            id: element.key,\n            name: element.val().name,\n            numberPhone: element.val().numberPhone,\n            department: element.val().department\n          });\n        });\n        setUsers([...result]);\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(function (error) {\n      console.error(error);\n    }); // get all order\n\n    Firebase.readOrders().then(snapshot => {\n      let result = [];\n\n      if (snapshot.exists()) {\n        snapshot.forEach(element => {\n          result.push({\n            idOrder: element.key,\n            idUser: element.val().idUser,\n            date: new Date(JSON.parse(element.val().date)),\n            status: element.val().status\n          });\n        });\n        setOrders([...result]);\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []); // load status order\n\n  useEffect(() => {\n    // change isOrder\n    if (isExistOrder(orders, presentUser.id)) {\n      setIsOrder(true);\n    } // eslint-disable-next-line\n\n  }, [orders]); // handle when complete input user\n\n  const onSetUser = user => {\n    setPresentUser({ ...user\n    });\n    localStorage.setItem('user', JSON.stringify(user));\n  }; // handle when order lunch\n\n\n  const onOrder = status => {\n    let ordersCopy = [...orders];\n    let index = getOrder(orders, presentUser.id);\n    console.log(index);\n\n    if (index === -1) {\n      let newOrder = {\n        idOrder: createUUID(),\n        idUser: presentUser.id,\n        date: new Date(),\n        status: status\n      };\n      ordersCopy.push(newOrder);\n      Firebase.writeOrders(newOrder);\n    } else {\n      let newOrder = { ...ordersCopy[index],\n        status: status\n      };\n      ordersCopy[index] = newOrder;\n      Firebase.writeOrders(newOrder);\n    }\n\n    setOrders([...ordersCopy]);\n  }; // change order\n\n\n  var onHandleChangeOrder = () => {\n    setIsOrder(!isOrder);\n  }; // return component\n\n\n  const componentsUI = () => {\n    if (presentUser.id.trim() === '') {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        setUser: onSetUser,\n        users: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Question, {\n      user: presentUser,\n      order: onOrder,\n      isOrder: isOrder,\n      onHandleChangeOrder: onHandleChangeOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: componentsUI()\n  }, void 0, false);\n}\n\n_s(App, \"34aZ/9lB06sQgHlpODVILduIBs4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Projects/riceTicket/src/App.js"],"names":["useEffect","useState","Login","Question","Firebase","createUUID","s","hexDigits","i","substr","Math","floor","random","uuid","join","getFullDate","date","result","getDate","getMonth","getFullYear","isExistOrder","orders","id","forEach","element","parseDate","Date","status","idUser","getOrder","index","App","presentUser","setPresentUser","name","numberPhone","department","setOrders","users","setUsers","isOrder","setIsOrder","readUsers","then","snapshot","exists","push","key","val","console","log","catch","error","readOrders","idOrder","JSON","parse","onSetUser","user","localStorage","setItem","stringify","onOrder","ordersCopy","newOrder","writeOrders","onHandleChangeOrder","componentsUI","trim"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Login from './component/login/Login';\r\nimport Question from './component/question/Question';\r\nimport * as Firebase from './utils/CallFirebase';\r\n\r\n// create UUID\r\nfunction createUUID() {\r\n    // http://www.ietf.org/rfc/rfc4122.txt\r\n    var s = [];\r\n    var hexDigits = \"0123456789abcdef\";\r\n    for (var i = 0; i < 36; i++) {\r\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n    }\r\n    s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\r\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n    s[8] = s[13] = s[18] = s[23] = \"-\";\r\n    \r\n    var uuid = s.join(\"\");\r\n    return uuid;\r\n}\r\n\r\nfunction getFullDate(date) {\r\n    let result = '';\r\n\r\n    result = '' + date.getDate() + '/' + (date.getMonth()+1) + '/' + date.getFullYear();\r\n\r\n    return result;\r\n}\r\n\r\n\r\nfunction isExistOrder(orders, id) {\r\n    let result = false;\r\n\r\n    orders.forEach(element => {\r\n        let parseDate = new Date(element.date);\r\n\r\n        if (element.status===1&&element.idUser === id && getFullDate(parseDate) === getFullDate(new Date())) {\r\n            result = true;\r\n        }\r\n    });\r\n\r\n    return result;    \r\n}\r\n\r\n\r\nfunction getOrder (orders, id) {\r\n    let result = -1;\r\n\r\n    orders.forEach((element,index) => {\r\n        let parseDate = new Date(element.date);\r\n\r\n        if (element.idUser === id && getFullDate(parseDate) === getFullDate(new Date())) {\r\n            result = index;\r\n        }\r\n    });\r\n\r\n    return result;    \r\n}\r\n\r\nfunction App() {\r\n    // declare state \r\n    const [presentUser, setPresentUser] = useState({\r\n        id: '',\r\n        name: '',\r\n        numberPhone: '',\r\n        department: 1\r\n    });\r\n    const [orders, setOrders] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [isOrder, setIsOrder] = useState(false); \r\n\r\n    // load user from local Storage\r\n    useEffect(\r\n        () => {\r\n\r\n\r\n                // get all user\r\n                Firebase.readUsers().then(snapshot => {\r\n                    let result = []\r\n                    if (snapshot.exists()) {\r\n                        snapshot.forEach(element => {\r\n                            result.push(\r\n                                {\r\n                                    id: element.key,\r\n                                    name: element.val().name,\r\n                                    numberPhone: element.val().numberPhone,\r\n                                    department: element.val().department\r\n                                }\r\n                            )\r\n                        })\r\n                        setUsers([...result]);\r\n                    }\r\n                    else {\r\n                      console.log(\"No data available\");\r\n                    }\r\n                  }\r\n                ).catch(function(error) {\r\n                    console.error(error);\r\n                    }\r\n                );\r\n\r\n                // get all order\r\n                Firebase.readOrders().then(snapshot => {\r\n                    let result = []\r\n                    if (snapshot.exists()) {\r\n                        snapshot.forEach(element => {\r\n                            result.push(\r\n                                {\r\n                                    idOrder: element.key,\r\n                                    idUser: element.val().idUser,\r\n                                    date: new Date(JSON.parse(element.val().date)),\r\n                                    status: element.val().status\r\n                                }\r\n                            )\r\n                        })\r\n                        setOrders([...result]);\r\n                    }\r\n                    else {\r\n                      console.log(\"No data available\");\r\n                    }\r\n                  }\r\n                ).catch(function(error) {\r\n                    console.error(error);\r\n                    }\r\n                );\r\n        },[]\r\n    )\r\n\r\n    // load status order\r\n    useEffect(\r\n        () => {\r\n            // change isOrder\r\n            if(isExistOrder(orders,presentUser.id)) {\r\n                setIsOrder(true);\r\n            }\r\n            // eslint-disable-next-line\r\n        },[orders]\r\n    )\r\n\r\n    // handle when complete input user\r\n    const onSetUser = user => {\r\n        setPresentUser({\r\n            ...user\r\n        })\r\n\r\n        localStorage.setItem('user',JSON.stringify(user));\r\n    }\r\n\r\n    // handle when order lunch\r\n    const onOrder = status => {\r\n        let ordersCopy = [...orders];\r\n        let index = getOrder(orders,presentUser.id);\r\n\r\n        console.log(index);\r\n\r\n        if (index===-1) {\r\n            let newOrder = {\r\n                idOrder: createUUID(),\r\n                idUser: presentUser.id,\r\n                date: new Date(),\r\n                status: status\r\n            }\r\n            ordersCopy.push(newOrder);\r\n\r\n            Firebase.writeOrders(newOrder)\r\n        }else{\r\n            \r\n            let newOrder = {\r\n                ...ordersCopy[index],\r\n                status: status\r\n            };\r\n            ordersCopy[index] =  newOrder;\r\n\r\n            Firebase.writeOrders(newOrder);\r\n        }\r\n\r\n        setOrders([...ordersCopy]);\r\n    }\r\n\r\n    // change order\r\n    var onHandleChangeOrder = () => {\r\n        setIsOrder(!isOrder);\r\n    }\r\n\r\n    // return component\r\n    const componentsUI = () => {\r\n        if (presentUser.id.trim() === '') {\r\n            return (\r\n                <Login \r\n                    setUser={onSetUser}\r\n                    users={users}\r\n                />\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <Question \r\n                user={presentUser}\r\n                order={onOrder}\r\n                isOrder={isOrder}\r\n                onHandleChangeOrder={onHandleChangeOrder}\r\n            />\r\n        )  \r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            componentsUI()\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}