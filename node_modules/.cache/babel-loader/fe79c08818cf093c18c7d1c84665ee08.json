{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\riceTicket\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './component/login/Login';\nimport Question from './component/question/Question';\nimport * as Firebase from './utils/CallFirebase';\nimport * as Common from './utils/common'; // check order \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction isExistOrder(orders, id) {\n  let result = false;\n  orders.forEach(element => {\n    let parseDate = new Date(element.date);\n\n    if (element.status === 1 && element.idUser === id && Common.getFullDate(parseDate) === Common.getFullDate(new Date())) {\n      result = true;\n    }\n  });\n  return result;\n}\n\nfunction getOrder(orders, id) {\n  let result = -1;\n  orders.forEach((element, index) => {\n    let parseDate = new Date(element.date);\n\n    if (element.idUser === id && Common.getFullDate(parseDate) === Common.getFullDate(new Date())) {\n      result = index;\n    }\n  });\n  return result;\n}\n\nfunction App() {\n  _s();\n\n  // declare state \n  const [presentUser, setPresentUser] = useState({\n    id: '',\n    name: '',\n    numberPhone: '',\n    department: 1\n  });\n  const [orders, setOrders] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [isOrder, setIsOrder] = useState(false); // load user from local Storage\n\n  useEffect(() => {\n    // get user present\n    let user = JSON.parse(localStorage.getItem('user')) ? JSON.parse(localStorage.getItem('user')) : {\n      id: '',\n      name: '',\n      numberPhone: '',\n      department: 1\n    };\n    setPresentUser({ ...user\n    });\n  }, []);\n  useEffect(() => {\n    // get all user\n    Firebase.readUsers().then(snapshot => {\n      let result = [];\n\n      if (snapshot.exists()) {\n        snapshot.forEach(element => {\n          result.push({\n            id: element.key,\n            name: element.val().name,\n            numberPhone: element.val().numberPhone,\n            department: element.val().department\n          });\n        });\n        setUsers([...result]);\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(function (error) {\n      console.error(error);\n    }); // get all order\n\n    Firebase.readOrders().then(snapshot => {\n      let result = [];\n\n      if (snapshot.exists()) {\n        snapshot.forEach(element => {\n          result.push({\n            idOrder: element.key,\n            idUser: element.val().idUser,\n            date: new Date(JSON.parse(element.val().date)),\n            status: element.val().status\n          });\n        });\n        setOrders([...result]);\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, [presentUser]); // load status order\n\n  useEffect(() => {\n    // change isOrder\n    if (isExistOrder(orders, presentUser.id)) {\n      setIsOrder(true);\n    } // eslint-disable-next-line\n\n  }, [orders]); // handle when complete input user\n\n  const onSetUser = user => {\n    setPresentUser({ ...user\n    });\n    localStorage.setItem('user', JSON.stringify(user));\n  }; // handle when order lunch\n\n\n  const onOrder = status => {\n    let ordersCopy = [...orders];\n    let index = getOrder(orders, presentUser.id);\n    console.log(index);\n\n    if (index === -1) {\n      let newOrder = {\n        idOrder: Common.createUUID(),\n        idUser: presentUser.id,\n        date: new Date(),\n        status: status\n      };\n      ordersCopy.push(newOrder);\n      Firebase.writeOrders(newOrder);\n    } else {\n      let newOrder = { ...ordersCopy[index],\n        status: status\n      };\n      ordersCopy[index] = newOrder;\n      Firebase.writeOrders(newOrder);\n    }\n\n    setOrders([...ordersCopy]);\n  }; // change order\n\n\n  var onHandleChangeOrder = () => {\n    setIsOrder(!isOrder);\n  }; // return component\n\n\n  const componentsUI = () => {\n    if (presentUser.id.trim() === '') {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        setUser: onSetUser,\n        users: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Question, {\n      user: presentUser,\n      order: onOrder,\n      isOrder: isOrder,\n      onHandleChangeOrder: onHandleChangeOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: componentsUI()\n  }, void 0, false);\n}\n\n_s(App, \"P3uVm1pgSNRtwsj93VI0AWlZ0Ss=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Projects/riceTicket/src/App.js"],"names":["useEffect","useState","Login","Question","Firebase","Common","isExistOrder","orders","id","result","forEach","element","parseDate","Date","date","status","idUser","getFullDate","getOrder","index","App","presentUser","setPresentUser","name","numberPhone","department","setOrders","users","setUsers","isOrder","setIsOrder","user","JSON","parse","localStorage","getItem","readUsers","then","snapshot","exists","push","key","val","console","log","catch","error","readOrders","idOrder","onSetUser","setItem","stringify","onOrder","ordersCopy","newOrder","createUUID","writeOrders","onHandleChangeOrder","componentsUI","trim"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Login from './component/login/Login';\r\nimport Question from './component/question/Question';\r\nimport * as Firebase from './utils/CallFirebase';\r\nimport * as Common from './utils/common';\r\n\r\n// check order \r\nfunction isExistOrder(orders, id) {\r\n    let result = false;\r\n\r\n    orders.forEach(element => {\r\n        let parseDate = new Date(element.date);\r\n\r\n        if (\r\n                element.status===1&&element.idUser === id && \r\n                Common.getFullDate(parseDate) === Common.getFullDate(new Date())\r\n        ) {\r\n            result = true;\r\n        }\r\n    });\r\n\r\n    return result;    \r\n}\r\n\r\n\r\nfunction getOrder (orders, id) {\r\n    let result = -1;\r\n\r\n    orders.forEach((element,index) => {\r\n        let parseDate = new Date(element.date);\r\n\r\n        if (element.idUser === id && Common.getFullDate(parseDate) === Common.getFullDate(new Date())) {\r\n            result = index;\r\n        }\r\n    });\r\n\r\n    return result;    \r\n}\r\n\r\nfunction App() {\r\n    // declare state \r\n    const [presentUser, setPresentUser] = useState({\r\n        id: '',\r\n        name: '',\r\n        numberPhone: '',\r\n        department: 1\r\n    });\r\n    const [orders, setOrders] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [isOrder, setIsOrder] = useState(false); \r\n\r\n    // load user from local Storage\r\n    useEffect(\r\n        () => {\r\n            // get user present\r\n            let user = JSON.parse(localStorage.getItem('user'))?\r\n            JSON.parse(localStorage.getItem('user')):\r\n            {\r\n                id: '',\r\n                name: '',\r\n                numberPhone: '',\r\n                department: 1\r\n            };\r\n            setPresentUser({...user});\r\n        },[]\r\n    )\r\n    \r\n    useEffect(\r\n        () => {\r\n\r\n                // get all user\r\n                Firebase.readUsers().then(snapshot => {\r\n                    let result = []\r\n                    if (snapshot.exists()) {\r\n                        snapshot.forEach(element => {\r\n                            result.push(\r\n                                {\r\n                                    id: element.key,\r\n                                    name: element.val().name,\r\n                                    numberPhone: element.val().numberPhone,\r\n                                    department: element.val().department\r\n                                }\r\n                            )\r\n                        })\r\n                        setUsers([...result]);\r\n                    }\r\n                    else {\r\n                      console.log(\"No data available\");\r\n                    }\r\n                  }\r\n                ).catch(function(error) {\r\n                    console.error(error);\r\n                    }\r\n                );\r\n\r\n                // get all order\r\n                Firebase.readOrders().then(snapshot => {\r\n                    let result = []\r\n                    if (snapshot.exists()) {\r\n                        snapshot.forEach(element => {\r\n                            result.push(\r\n                                {\r\n                                    idOrder: element.key,\r\n                                    idUser: element.val().idUser,\r\n                                    date: new Date(JSON.parse(element.val().date)),\r\n                                    status: element.val().status\r\n                                }\r\n                            )\r\n                        })\r\n                        setOrders([...result]);\r\n                    }\r\n                    else {\r\n                      console.log(\"No data available\");\r\n                    }\r\n                  }\r\n                ).catch(function(error) {\r\n                    console.error(error);\r\n                    }\r\n                );\r\n        },[presentUser]\r\n    )\r\n\r\n    // load status order\r\n    useEffect(\r\n        () => {\r\n            // change isOrder\r\n            if(isExistOrder(orders,presentUser.id)) {\r\n                setIsOrder(true);\r\n            }\r\n            // eslint-disable-next-line\r\n        },[orders]\r\n    )\r\n\r\n    // handle when complete input user\r\n    const onSetUser = user => {\r\n        setPresentUser({\r\n            ...user\r\n        })\r\n\r\n        localStorage.setItem('user',JSON.stringify(user));\r\n    }\r\n\r\n    // handle when order lunch\r\n    const onOrder = status => {\r\n        let ordersCopy = [...orders];\r\n        let index = getOrder(orders,presentUser.id);\r\n\r\n        console.log(index);\r\n\r\n        if (index===-1) {\r\n            let newOrder = {\r\n                idOrder: Common.createUUID(),\r\n                idUser: presentUser.id,\r\n                date: new Date(),\r\n                status: status\r\n            }\r\n            ordersCopy.push(newOrder);\r\n\r\n            Firebase.writeOrders(newOrder)\r\n        }else{\r\n            \r\n            let newOrder = {\r\n                ...ordersCopy[index],\r\n                status: status\r\n            };\r\n            ordersCopy[index] =  newOrder;\r\n\r\n            Firebase.writeOrders(newOrder);\r\n        }\r\n\r\n        setOrders([...ordersCopy]);\r\n    }\r\n\r\n    // change order\r\n    var onHandleChangeOrder = () => {\r\n        setIsOrder(!isOrder);\r\n    }\r\n\r\n    // return component\r\n    const componentsUI = () => {\r\n        if (presentUser.id.trim() === '') {\r\n            return (\r\n                <Login \r\n                    setUser={onSetUser}\r\n                    users={users}\r\n                />\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <Question \r\n                user={presentUser}\r\n                order={onOrder}\r\n                isOrder={isOrder}\r\n                onHandleChangeOrder={onHandleChangeOrder}\r\n            />\r\n        )  \r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            componentsUI()\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}